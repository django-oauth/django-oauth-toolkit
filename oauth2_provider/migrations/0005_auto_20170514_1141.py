# Generated by Django 1.11.1 on 2017-05-14 11:41
import logging
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.db.migrations.operations.base import Operation

from oauth2_provider.settings import oauth2_settings

log = logging.getLogger(__name__)


class Migration(migrations.Migration):
    # Workaround for `pyodbc NotImplementedError: the backend doesn't support altering from/to AutoField.`
    if 'ENGINE' in settings.DATABASES['default'] and 'pyodbc' in settings.DATABASES['default']['ENGINE']:
        log.warning('database is pyodbc: altering to BigAutoField is a no-op.')
        class BigAlterField(Operation):
            def state_forwards(self, app_label, state):
                pass

            def database_forwards(self, app_label, schema_editor, from_state, to_state):
                pass

            def database_backwards(self, app_label, schema_editor, from_state, to_state):
                pass

    else:
        class BigAlterField(migrations.AlterField):
            pass

    dependencies = [
        ('oauth2_provider', '0004_auto_20160525_1623'),
    ]

    operations = [
        migrations.AlterField(
            model_name='accesstoken',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=oauth2_settings.APPLICATION_MODEL),
        ),
        BigAlterField(
            model_name='accesstoken',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='accesstoken',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oauth2_provider_accesstoken', to=settings.AUTH_USER_MODEL),
        ),
        BigAlterField(
            model_name='application',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        BigAlterField(
            model_name='grant',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='grant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oauth2_provider_grant', to=settings.AUTH_USER_MODEL),
        ),
        BigAlterField(
            model_name='refreshtoken',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='refreshtoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oauth2_provider_refreshtoken', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accesstoken',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='accesstoken',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='application',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='application',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='grant',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='grant',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='refreshtoken',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='refreshtoken',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
    ]
